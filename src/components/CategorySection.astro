---
import { getCollection } from 'astro:content';
import ResourceCard from './ResourceCard.astro';

export interface Props {
  categoryId: string;
  title: string;
  subtitle?: string;
}

const { categoryId, title, subtitle } = Astro.props;

// Get resources for this category
const resources = await getCollection('resources', ({ data }) => {
  return data.category === categoryId;
});

// Sort resources by order, then by title
const sortedResources = resources.sort((a, b) => {
  if (a.data.order && b.data.order) {
    return a.data.order - b.data.order;
  }
  if (a.data.order) return -1;
  if (b.data.order) return 1;
  return a.data.title.localeCompare(b.data.title);
});
---

{sortedResources.length > 0 && (
  <section id={categoryId} class="mb-16 scroll-mt-24">
    <div class="mb-8">
      <h2 class="text-3xl md:text-4xl font-bold text-white mb-3 capitalize">
        {subtitle || title}
      </h2>
      <div class="h-1 w-24 bg-gradient-to-r from-white to-white/50 rounded-full"></div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 animate-fade-in">
      {sortedResources.map((resource, index) => (
        <div 
          class="animate-slide-in" 
          style={`animation-delay: ${index * 0.1}s`}
        >
          <ResourceCard
            title={resource.data.title}
            url={resource.data.url}
            description={resource.data.description}
            featured={resource.data.featured}
          />
        </div>
      ))}
    </div>
    
    {sortedResources.length === 0 && (
      <div class="text-center py-12">
        <div class="bg-white/10 rounded-lg p-6 inline-block">
          <p class="text-white/80 text-lg">No resources available in this category yet.</p>
          <p class="text-white/60 text-sm mt-2">Check back soon for new additions!</p>
        </div>
      </div>
    )}
  </section>
)}